generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shortOtpCode               String?
  shortOtpExpiry             DateTime       @default(now())
   longOtpCode                String?
  longOtpExpiry              DateTime       @default(now())
   otps                       OTP[]
  resetToken String?  
  resetTokenExpiry DateTime?  
   measurementTemplates  MeasurementTemplate[]
  requisitions Requisition[]

  @@map("users")
}

model OTP {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("otps")
}





model Requisition {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  name        String?
  description String?
  measurements Json?
  contactInfo Json?
  status      Status?   @default(PENDING)
  priority    Priority? @default(MEDIUM)
  dueDate     DateTime? 
  completedDate DateTime?
  notes       Json[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("requisitions")
  @@index([userId, status])
  @@index([createdAt])
  @@index([dueDate])
}

enum Role {
  CUSTOMER
  ADMIN
  TAILOR
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model MeasurementTemplate {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  template    Json
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("measurement_templates")
}